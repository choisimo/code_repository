-- 이메일 주소 관리 테이블
CREATE TABLE email (
    id INTEGER PRIMARY KEY,
    email_address TEXT NOT NULL UNIQUE,
    display_name TEXT,
    is_active INTEGER DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 백업 설정과 이메일 간의 다대다 관계 테이블
CREATE TABLE backup_config_email (
    config_id INTEGER NOT NULL,
    email_id INTEGER NOT NULL,
    is_primary INTEGER DEFAULT 0, -- 기본 이메일인지 여부
    PRIMARY KEY (config_id, email_id),
    FOREIGN KEY (config_id) REFERENCES backup_config(id) ON DELETE CASCADE,
    FOREIGN KEY (email_id) REFERENCES email(id) ON DELETE CASCADE
);

-- 백업 설정 테이블
CREATE TABLE backup_config (
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL,
    schedule TEXT NOT NULL,
    backup_time TEXT NOT NULL,
    source_dir TEXT NOT NULL,
    dest_dir TEXT NOT NULL,
    log_dir TEXT NOT NULL,
    remote_server TEXT,
    remote_host TEXT,
    remote_port TEXT DEFAULT '22',
    remote_user TEXT,
    identity_file TEXT,
    use_sshd_config INTEGER DEFAULT 1,
    exclude_pattern TEXT,
    retention_days INTEGER DEFAULT 30,
    sync_options TEXT DEFAULT '-avz --delete',
    backup_type TEXT DEFAULT 'full',
    compression_level TEXT,
    bandwidth_limit TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    is_active INTEGER DEFAULT 1
);

-- 백업 작업 기록 테이블
CREATE TABLE backup_jobs (
    id INTEGER PRIMARY KEY,
    config_id INTEGER,
    status TEXT NOT NULL, -- 'running', 'completed', 'failed'
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP,
    duration_seconds INTEGER,
    total_files INTEGER DEFAULT 0,
    total_size INTEGER DEFAULT 0,
    success_count INTEGER DEFAULT 0,
    fail_count INTEGER DEFAULT 0,
    log_file TEXT,
    error_message TEXT,
    FOREIGN KEY (config_id) REFERENCES backup_config(id)
);

-- 백업 로그 세부 정보 테이블
CREATE TABLE backup_logs (
    id INTEGER PRIMARY KEY,
    job_id INTEGER,
    timestamp TIMESTAMP NOT NULL,
    log_level TEXT NOT NULL, -- 'info', 'warning', 'error'
    message TEXT NOT NULL,
    FOREIGN KEY (job_id) REFERENCES backup_jobs(id)
);

-- 백업 파일 목록 테이블
CREATE TABLE backup_files (
    id INTEGER PRIMARY KEY,
    job_id INTEGER,
    file_path TEXT NOT NULL,
    file_size INTEGER,
    backup_status TEXT NOT NULL, -- 'success', 'failed'
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (job_id) REFERENCES backup_jobs(id)
);
